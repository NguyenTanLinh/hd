{"version":3,"file":"wp-content/plugins/hd-addons/assets/js/node_modules_foundation-sites_js_entries_plugins_foundation_accordionMenu_js.js","mappings":";;;;;;;;;;;;;;;;AAA+C;;AAEgB;AAC/D,wDAAU,QAAQ,oEAAa;;AAEM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLrC;AACA;AACA;AACuB;AAC4B;AACG;AAC8C;;AAEpG,wDAAU,aAAa,+CAAC;;AAExB;AACA;AACA,wDAAU,UAAU,2DAAM;;AAE1B;AACA;AACA;AACA,wDAAU,OAAO,uDAAG;AACpB,wDAAU,eAAe,+DAAW;AACpC,wDAAU,iBAAiB,iEAAa;AACxC,wDAAU,gBAAgB,gEAAY;AACtC,wDAAU,UAAU,0DAAM;;AAE1B,oBAAoB,wDAAU;;AAE9B;AACA;AACA;;AAEsB;AACuB;AACD","sources":["webpack://hd/./node_modules/foundation-sites/js/entries/plugins/foundation.accordionMenu.js","webpack://hd/./node_modules/foundation-sites/js/entries/plugins/foundation.core.js"],"sourcesContent":["import { Foundation } from './foundation.core';\n\nimport { AccordionMenu } from '../../foundation.accordionMenu';\nFoundation.plugin(AccordionMenu, 'AccordionMenu');\n\nexport { Foundation, AccordionMenu };\n","// --- Foundation Core API ---\n// Initialize Foundation and add some utilities to its public API for backward compatibility.\n// Please note that every utility do not have to be added to the core API.\nimport $ from 'jquery';\nimport { Foundation } from '../../foundation.core';\nimport { Plugin } from '../../foundation.core.plugin';\nimport { rtl, GetYoDigits, transitionend, RegExpEscape, onLoad } from '../../foundation.core.utils';\n\nFoundation.addToJquery($);\n\n// Every plugin depends on plugin now, we can include that on the core for the\n// script inclusion path.\nFoundation.Plugin = Plugin;\n\n// These are now separated out, but historically were a part of this module,\n// and since this is here for backwards compatibility we include them in\n// this entry.\nFoundation.rtl = rtl;\nFoundation.GetYoDigits = GetYoDigits;\nFoundation.transitionend = transitionend;\nFoundation.RegExpEscape = RegExpEscape;\nFoundation.onLoad = onLoad;\n\nwindow.Foundation = Foundation;\n\n// --- Foundation Core exports ---\n// Export \"Plugin\" and all core utilities, since the `foundation.core` entry plays the role of\n// all core source files.\n\nexport { Foundation };\nexport * from '../../foundation.core.plugin';\nexport * from '../../foundation.core.utils';\n"],"names":[],"sourceRoot":""}